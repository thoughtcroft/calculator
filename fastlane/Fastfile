# vi:syntax=ruby
# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.3.1"

default_platform :ios

def version_number
  `/usr/libexec/plistbuddy -c Print:CFBundleShortVersionString '../Calculator/Info.plist'`.strip
end


platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    ENV["SIGH_USERNAME"] = "warren@thoughtcroft.com"
    ensure_git_status_clean
  end


  desc "Build and sign the app"
  private_lane :build_app do |options|
    cocoapods
    ENV['PROFILE_UDID'] = sigh

    #ipa(
      #scheme: "wazza-is-awesome",
      #configuration: options[:config]
    #)

    xcbuild(
      archive: true,
      scheme: 'wazza-is-awesome',
      configuration: options[:config],
      sdk: 'iphoneos'
    )
  end


  desc "Populate environment variables for beta version"
  private_lane :get_beta_metadata do |options|
    Dir.glob('metadata/beta/*').each do |file|
      ENV[File.basename(file, '.*').upcase]=File.read(file)
    end
  end


  desc "Generate screen captures on all relevant devices"
  desc "Additionally, add device frame and titles to the screenshots"
  lane :snapshot do
    snapshot
    frameit
  end


  desc "Submit metadata to iTunes Connect"
  lane :metadata do
    deliver(metadata_only: true)
  end


  desc "Update marketing version number"
  lane :update_version do |options|
    increment_version_number(version_number: options[:version])
  end


  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  desc "Beta testers will also be notified to download the build"
  lane :beta do
    build_number = Time.new.strftime("%Y%m%d.%H%M")
    increment_build_number(build_number: build_number)
    build_app(config: "Beta")

    get_beta_metadata

    testflight

    clean_build_artifacts
    commit_version_bump(message: 'Version bump by fastlane')
    add_git_tag(tag: "testflight-v#{version_number}-b#{build_number}")
    push_to_git_remote

    slack(message: "Deployed wazza-is-awesome v#{version_number} (#{build_number}) to TestFlight :rocket:")
  end


  desc "Deploy a new version to the App Store"
  desc "** Full Markdown** Support: `code`"
  lane :deploy do
    #snapshot
    #sigh
    #deliver(skip_deploy: true, force: true)
    #frameit
  end


  after_all do |lane|
    # This block is called, only if the executed lane was successful
  end


  error do |lane, exception|
     slack(
       message: exception.message,
       success: false
     )
  end
end


# More information about multiple platforms in fastlane:
# https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
